# A list of helpful sparql queries


## Select uris linked from an entity including via blank node (one level)
select ?p2 ?o2 ?p3 ?o3 where {
	{
		# Links *FROM* the entity
		<http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar> ?p2 ?o2 .
		FILTER ( isURI(?o2) )
	}
	UNION
	{

		# Links *FROM* the entity via blanknodes
		<http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar> ?p2 ?o2 .
		?o2 ?p3 ?o3
		FILTER( isBlank(?o2) && isURI(?o3) )
	}
}



## Select URIs linked *TO* an entity including via blank nodes (five levels)
select ?s1 ?p1 ?s2 ?p2 ?s3 ?p3 ?s4 ?p4 ?s5 ?p5 where {
  {
    # Thinks that link *TO* the entity
    ?s1 ?p1 <http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar>
   	FILTER (isURI(?s1))
  }
  UNION
  {
    # Things that link *TO* the entity via a blanknode
    ?s1 ?p1 <http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar>.
    ?s2 ?p2 ?s1
      FILTER (isBlank(?s1)&&isURI(?s2))
  }
  UNION
  {
    # Things that link *TO* the entity via a blanknode via a blanknode.
      ?s1 ?p1 <http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar>.
      ?s2 ?p2 ?s1.
      ?s3 ?p3 ?s2
      FILTER ( isBlank(?s1) && isBlank(?s2)&&isURI(?s3) )
  }
  UNION
  {
    # Things that link *TO* the entity via a blanknode via a blanknode.
      ?s1 ?p1 <http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar>.
      ?s2 ?p2 ?s1.
      ?s3 ?p3 ?s2.
      ?s4 ?p4 ?s3.
      FILTER ( isBlank(?s1) && isBlank(?s2) && isBlank(?s3) && isURI(?s4))
  }
  UNION
  {
    # Things that link *TO* the entity via a blanknode via a blanknode via a blacknode via a blanknode
      ?s1 ?p1 <http://annalist.net/annalist_sitedata/c/Carolan_Guitar/d/Artifact/Carolan_Guitar>.
      ?s2 ?p2 ?s1.
      ?s3 ?p3 ?s2.
      ?s4 ?p4 ?s3.
      ?s5 ?p5 ?s4.
      FILTER ( isBlank(?s1) && isBlank(?s2) && isBlank(?s3) && isBlank(?s4) && isURI(?s5) )
  }
} limit 100


Getting members of a list (in Fuseki)
--------------

### Data:

PREFIX : <http://example.org/stuff/1.0/>
<my_thing> :some_predicate ( "apple" "banana" "cherry" ) .

### Query:

PREFIX list: <http://jena.hpl.hp.com/ARQ/list#>
SELECT ?pred_with_list  ?length ?members {
  <http://localhost:3030/alist/my_thing> ?pred_with_list ?list .
  ?list list:length ?length .
  ?list list:member ?members .
}

### Returns (tsv):

pred_with_list,length,members
?pred_with_list	?length	?members
<http://example.org/stuff/1.0/some_predicate>	3	"apple"
<http://example.org/stuff/1.0/some_predicate>	3	"banana"
<http://example.org/stuff/1.0/some_predicate>	3	"cherry"


Getting members including list values
-------------------------------------

PREFIX list: <http://jena.hpl.hp.com/ARQ/list#>

SELECT ?s ?p ?member {
  {
  	?s ?p ?member . # Get members
    optional{
      ?member list:member ?ignore_lists # But not those which are lists (bnodes)
    }
    filter( ! bound( ?ignore_lists ) )
  }
  UNION {
	?s ?p ?lists .
	?lists list:member ?member	# Get list members
  }

  filter( ?s = <http://localhost:3030/alist/my_thing> )
}


Getting values, lists nad first level bnodes
-------------------------------------------

PREFIX list: <http://jena.hpl.hp.com/ARQ/list#>

SELECT ?s ?p ?o ?p2 ?o2 {
  {
  	?s ?p ?o . # Get members
    optional{
      ?o list:member ?ignore_lists # But not those which are lists (bnodes) or blank subjects
    }
    filter( !isBlank( ?o ) )
  }

  UNION {
	?s ?p ?lists .
	?lists list:member ?o	# Get list members
  }

  UNION {
	?s ?p2 ?b1.
	?b1 ?p ?o . # Get blank node stuff. TODO: Can we "forget" intermediate predicate?
    optional{
      ?b1 list:member ?ignore_lists # But not those which are lists (bnodes)
    }
    filter( ! bound( ?ignore_lists ) )
  }

  filter( ?s = <http://localhost:3030/alist/my_thing> )
}